from ...utils.telegram_api import send_message, fetch_url
from ...bot.parser.itproger_parser import parse_news
from ...bot.keyboards.inline import create_news_keyboard, create_favorites_keyboard
from ...database.db_operations import save_user, log_request, save_news_to_cache, get_cached_news, get_user_favorites, get_user_stats

def format_article_detail(article):
    title = article.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
    description = article.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')
    
    response = f"<b>{title}</b>\n\n"
    response += f"<i>{description}</i>\n\n"
    response += f"üîó <a href='https://itproger.com/news'>–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç—å—é –Ω–∞ itProger</a>"
    
    return response

def format_articles_response(articles, show_numbers=True):
    if not articles:
        return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å—Ç–∞—Ç—å–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"
    
    response = "üì∞ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å itProger:</b>\n\n"
    
    for i, article in enumerate(articles, 1):
        title = article.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
        description = article.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')
        
        if show_numbers:
            response += f"<b>{i}. {title}</b>\n"
        else:
            response += f"<b>{title}</b>\n"
            
        response += f"<i>üìù {description}</i>\n\n"
        
        if len(response) > 3500:
            response += "... –∏ –¥—Ä—É–≥–∏–µ —Å—Ç–∞—Ç—å–∏"
            break
    
    return response

def get_itproger_news(use_cache=True):
    if use_cache:
        cached_news = get_cached_news()
        if cached_news:
            return cached_news
    
    html = fetch_url("https://itproger.com/news")
    if html:
        articles = parse_news(html)
        if articles:
            save_news_to_cache(articles)
        return articles
    else:
        return get_cached_news()

def handle_user_message(message, current_articles):
    chat_id = message["chat"]["id"]
    text = message["text"].strip()
    user_id = message["from"]["id"]
    
    save_user(message["from"])
    log_request(user_id, text)
    
    if text.startswith("http"):
        html = fetch_url(text)
        if html:
            if "itproger.com/news" in text:
                articles = parse_news(html)
                if articles:
                    save_news_to_cache(articles)
                    current_articles[chat_id] = articles
                    response = format_articles_response(articles)
                    keyboard = create_news_keyboard(articles, user_id)
                    send_message(chat_id, response, keyboard)
                else:
                    send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å—Ç–∞—Ç—å–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
            else:
                send_message(chat_id, "üîó –Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥–µ itproger.com/news\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —ç—Ç–æ—Ç —Å–∞–π—Ç –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /news")
        else:
            send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL.")
            
    elif text == "/start":
        response = """üëã <b>–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π itProger</b>

üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/news - –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
/favorites - –ú–æ–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
/stats - –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É

üîó <b>–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É:</b>
https://itproger.com/news"""
        send_message(chat_id, response)
        
    elif text == "/news":
        articles = get_itproger_news()
        if articles:
            current_articles[chat_id] = articles
            response = format_articles_response(articles)
            keyboard = create_news_keyboard(articles, user_id)
            send_message(chat_id, response, keyboard)
        else:
            send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π —Å itproger.com")
            
    elif text == "/favorites":
        favorites = get_user_favorites(user_id)
        if favorites:
            response = "‚≠ê <b>–í–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:</b>\n\n"
            for i, fav in enumerate(favorites, 1):
                response += f"<b>{i}. {fav['title']}</b>\n"
            
            keyboard = create_favorites_keyboard(user_id)
            send_message(chat_id, response, keyboard)
        else:
            send_message(chat_id, "üìù –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.")
            
    elif text == "/stats":
        stats = get_user_stats(user_id)
        response = f"""üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>

üì® –ó–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–æ—Ç—É: {stats['request_count']}
‚≠ê –ò–∑–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π: {stats['favorites_count']}
üïê –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {stats['last_activity'][:16]}"""
        send_message(chat_id, response)
        
    elif text == "/help":
        response = """‚ÑπÔ∏è <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>

–≠—Ç–æ—Ç –±–æ—Ç –ø–∞—Ä—Å–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è —Å—Ç–∞—Ç–µ–π —Å —Å–∞–π—Ç–∞ itproger.com/news

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/news - –ü–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
/favorites - –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"""
        send_message(chat_id, response)
            
    else:
        response = """‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞

üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/news - –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ itProger
/favorites - –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –°–ø—Ä–∞–≤–∫–∞"""
        send_message(chat_id, response)
